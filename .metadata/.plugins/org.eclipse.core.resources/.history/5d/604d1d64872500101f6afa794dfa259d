package com.criteriademo.specification;

import java.util.ArrayList;
import java.util.List;

import org.springframework.data.jpa.domain.Specification;

import com.criteriademo.dto.EmployeeSearchCriteria;
import com.criteriademo.entity.Employee;

import jakarta.persistence.criteria.CriteriaBuilder;
import jakarta.persistence.criteria.CriteriaQuery;
import jakarta.persistence.criteria.Predicate;
import jakarta.persistence.criteria.Root;

public class EmployeeSpecification {

	public static Specification<Employee> findByCriteria(EmployeeSearchCriteria criteria){
		return (Root<Employee> root,CriteriaQuery<?> query, CriteriaBuilder builder) -> {
			List<Predicate> predicates = new ArrayList<>();
			
			if (criteria.getFirstName() != null && !criteria.getFirstName().isEmpty()) {
				predicates.add(builder.like(builder.lower(root.get("firstName")),
						"%"+criteria.getFirstName().toLowerCase()+"%"));
			}
			return predicates.isEmpty() ? null : builder.and(predicates.toArray(new Predicate[0]));
		};
	}
	public static Specification<Employee> hasFirstName(String firstName) {
		return (root, query, builder) -> {
			if (firstName == null || firstName.isEmpty()) {
                return null;
            }
			return builder.like(builder.lower(root.get("lastName")), "%" + firstName.toLowerCase() + "%");
	        
		};
	}
}
